{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aneesah\\\\Desktop\\\\fs0422-epistaurant-pt5-main\\\\src\\\\App.js\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport CustomNavbar from './components/CustomNavbar';\nimport Home from './components/Home';\n// you're going to use curly brackets in an import statement if\n// the thing you're importing has not been exported as default\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\n// BrowserRouter is the outer wrapper of our routing system\n// Just wrap EVERYTHING into it, since it allows router features\n// to be available to the components inside. It is not providing anything\n// visible to your App, so be generous :)\n\n// Routes is a container for Route components. It should delimit the\n// areas of your page that you want to conditionally render upon\n// URLS in the address bar! The parts of the page that are not supposed\n// to be hidden on some routes, like the navbar, like a footer, should\n// not be wrapped inside Routes\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CustomNavbar, {\n        subtitle: \"Best pastas on the Internet!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["CustomNavbar","Home","BrowserRouter","Routes","Route","App"],"sources":["C:/Users/Aneesah/Desktop/fs0422-epistaurant-pt5-main/src/App.js"],"sourcesContent":["import './App.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport CustomNavbar from './components/CustomNavbar'\nimport Home from './components/Home'\n// you're going to use curly brackets in an import statement if\n// the thing you're importing has not been exported as default\nimport { BrowserRouter, Routes, Route } from 'react-router-dom'\n\n// BrowserRouter is the outer wrapper of our routing system\n// Just wrap EVERYTHING into it, since it allows router features\n// to be available to the components inside. It is not providing anything\n// visible to your App, so be generous :)\n\n// Routes is a container for Route components. It should delimit the\n// areas of your page that you want to conditionally render upon\n// URLS in the address bar! The parts of the page that are not supposed\n// to be hidden on some routes, like the navbar, like a footer, should\n// not be wrapped inside Routes\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n        {/* props names can be anything; but if the value is anything else\n      than a string, you have to delimit it with {} */}\n        <CustomNavbar subtitle=\"Best pastas on the Internet!\" />\n        {/* I'm likely to invoke Home here later */}\n        <Routes>\n          <Home />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAO,sCAAsC;AAC7C,OAAOA,YAAY,MAAM,2BAA2B;AACpD,OAAOC,IAAI,MAAM,mBAAmB;AACpC;AACA;AACA,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;;AAE/D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA,SAASC,GAAG,GAAG;EACb,oBACE,QAAC,aAAa;IAAA,uBACZ;MAAA,wBAGE,QAAC,YAAY;QAAC,QAAQ,EAAC;MAA8B;QAAA;QAAA;QAAA;MAAA,QAAG,eAExD,QAAC,MAAM;QAAA,uBACL,QAAC,IAAI;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACD;IAAA;MAAA;MAAA;MAAA;IAAA;EACL;IAAA;IAAA;IAAA;EAAA,QACQ;AAEpB;AAAC,KAdQA,GAAG;AAgBZ,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}